{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "header-06",
  "type": "registry:block",
  "description": "A simple header section.",
  "dependencies": [
    "@aliimam/logos",
    "@aliimam/icons",
    "next-themes"
  ],
  "registryDependencies": [
    "navigation-menu",
    "avatar",
    "dropdown-menu",
    "button"
  ],
  "files": [
    {
      "path": "registry/default/blocks/header/header-06/page.tsx",
      "content": "import { Header } from \"@/registry/default/blocks/header/header-06/components/header\";\n\nexport default function Header05() {\n  return (\n    <div className=\"flex flex-col min-h-screen w-full\">\n      <Header /> \n      <main className=\"flex-1\">\n        <section className=\"h-screen flex items-center justify-center\">\n          <h1 className=\"text-4xl font-bold\">Hero</h1>\n        </section> \n\n        <section className=\"h-screen flex items-center justify-center\">\n          <h1 className=\"text-4xl font-bold\">Section</h1>\n        </section>\n      </main>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/header-06.tsx"
    },
    {
      "path": "registry/default/blocks/header/header-06/components/header.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport Link from \"next/link\";\nimport type { ReactElement } from \"react\";\n\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n  navigationMenuTriggerStyle,\n} from \"@/registry/default/ui/navigation-menu\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/registry/default/ui/avatar\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\nimport { Vercel } from \"@aliimam/logos\";\nimport { cn } from \"@/registry/default/lib/utils\";\nimport {\n  Bot,\n  Box,\n  Calendar1,\n  ChartNoAxesColumnIncreasing,\n  Cpu,\n  AArrowUp,\n  Globe,\n  LayoutGrid,\n  PenTool,\n  ScanText,\n  Shield,\n  Smile,\n  Sparkle,\n  BookText,\n  BriefcaseBusiness,\n  Code,\n  Component,\n  Codepen,\n  Network,\n  Sparkles,\n  ScreenShare,\n  AppWindow,\n  Layers,\n  CirclePlus,\n  LogOut,\n} from \"@aliimam/icons\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { ThemeSwitcher } from \"@/registry/default/blocks/header/header-06/components/theme\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst cloud: {\n  title: string;\n  icon: ReactElement;\n  href: string;\n  description: string;\n}[] = [\n  {\n    title: \"AI SDK\",\n    href: \"#\",\n    icon: <Box strokeWidth={2} />,\n    description: \"The AI Toolkit for Typescript\",\n  },\n  {\n    title: \"AI Gateway\",\n    href: \"#\",\n    icon: <Sparkle strokeWidth={2} />,\n    description: \"One endpoint, all your models\",\n  },\n  {\n    title: \"Vercel Agent\",\n    href: \"#\",\n    icon: <AArrowUp strokeWidth={2} />,\n    description: \"An agent that knows your stack\",\n  },\n];\n\nconst core: {\n  title: string;\n  icon: ReactElement;\n  href: string;\n  description: string;\n}[] = [\n  {\n    title: \"CI/CD\",\n    href: \"#\",\n    icon: <LayoutGrid strokeWidth={2} />,\n    description: \"Helping teams ship 6Ã— faster\",\n  },\n  {\n    title: \"Content Delivery\",\n    href: \"#\",\n    icon: <Globe strokeWidth={2} />,\n    description: \"Fast, scalable, and reliable\",\n  },\n  {\n    title: \"Fluid Compute\",\n    href: \"#\",\n    icon: <Cpu strokeWidth={2} />,\n    description: \"Servers, in serverless form\",\n  },\n  {\n    title: \"Observability\",\n    href: \"#\",\n    icon: <ChartNoAxesColumnIncreasing strokeWidth={2} />,\n    description: \"Trace every step\",\n  },\n];\n\nconst security: {\n  title: string;\n  icon: ReactElement;\n  href: string;\n  description: string;\n}[] = [\n  {\n    title: \"Bot Management\",\n    href: \"#\",\n    icon: <Bot strokeWidth={2} />,\n    description: \"Scalable bot protection\",\n  },\n  {\n    title: \"BotID\",\n    href: \"#\",\n    icon: <ScanText strokeWidth={2} />,\n    description: \"Invisible CAPTCHA\",\n  },\n  {\n    title: \"Platform Security\",\n    href: \"#\",\n    icon: <Shield strokeWidth={2} />,\n    description: \"DDOS Protection, Firewall\",\n  },\n  {\n    title: \"Web Application Firewall\",\n    href: \"#\",\n    icon: <Calendar1 strokeWidth={2} />,\n    description: \"Granular, custom protection\",\n  },\n];\n\nconst company: {\n  title: string;\n  icon: ReactElement;\n  href: string;\n  description: string;\n}[] = [\n  {\n    title: \"Customers\",\n    href: \"#\",\n    icon: <Smile strokeWidth={2} />,\n    description: \"Trusted by the best teams\",\n  },\n  {\n    title: \"Blog\",\n    href: \"#\",\n    icon: <PenTool strokeWidth={2} />,\n    description: \"The latest posts and changes\",\n  },\n  {\n    title: \"Changelog\",\n    href: \"#\",\n    icon: <BookText strokeWidth={2} />,\n    description: \"See what shipped\",\n  },\n  {\n    title: \"Press\",\n    href: \"#\",\n    icon: <BriefcaseBusiness strokeWidth={2} />,\n    description: \"Read the latest news\",\n  },\n  {\n    title: \"Events\",\n    href: \"#\",\n    icon: <Calendar1 strokeWidth={2} />,\n    description: \"Join us at an event\",\n  },\n];\n\nconst open: {\n  title: string;\n  icon: ReactElement;\n  href: string;\n  description: string;\n}[] = [\n  {\n    title: \"Next.js\",\n    href: \"#\",\n    icon: <Code strokeWidth={2} />,\n    description: \"The native Next.js platform\",\n  },\n  {\n    title: \"Nuxt\",\n    href: \"#\",\n    icon: <Component strokeWidth={2} />,\n    description: \"The progressive web framework\",\n  },\n  {\n    title: \"Svelte\",\n    href: \"#\",\n    icon: <Codepen strokeWidth={2} />,\n    description: \"The web's efficient Ul framework\",\n  },\n  {\n    title: \"Turborepo\",\n    href: \"#\",\n    icon: <Network strokeWidth={2} />,\n    description: \"Speed with Enterprise scale\",\n  },\n];\n\nconst tools: {\n  title: string;\n  icon: ReactElement;\n  href: string;\n  description: string;\n}[] = [\n  {\n    title: \"Academy\",\n    href: \"#\",\n    icon: <Code strokeWidth={2} />,\n    description: \"Learn the ins and outs of Vercel\",\n  },\n  {\n    title: \"Marketplace\",\n    href: \"#\",\n    icon: <Component strokeWidth={2} />,\n    description: \"Extend and automate workflows\",\n  },\n  {\n    title: \"Templates\",\n    href: \"#\",\n    icon: <Codepen strokeWidth={2} />,\n    description: \"Jumpstart app development\",\n  },\n  {\n    title: \"Guides\",\n    href: \"#\",\n    icon: <Network strokeWidth={2} />,\n    description: \"Find help quickly\",\n  },\n  {\n    title: \"Partner Finder\",\n    href: \"#\",\n    icon: <Network strokeWidth={2} />,\n    description: \"Get help from solution partners\",\n  },\n];\n\nconst cases: {\n  title: string;\n  icon: ReactElement;\n  href: string;\n  description: string;\n}[] = [\n  {\n    title: \"Al Apps\",\n    href: \"#\",\n    icon: <Sparkles strokeWidth={2} />,\n    description: \"Deploy at the speed of Al\",\n  },\n  {\n    title: \"Composable Commerce\",\n    href: \"#\",\n    icon: <Component strokeWidth={2} />,\n    description: \"Power storefronts that convert\",\n  },\n  {\n    title: \"Marketing Sites\",\n    href: \"#\",\n    icon: <ScreenShare strokeWidth={2} />,\n    description: \"Jumpstart app development\",\n  },\n  {\n    title: \"Multi-tenant Platforms\",\n    href: \"#\",\n    icon: <Network strokeWidth={2} />,\n    description: \"Scale apps with one codebase\",\n  },\n  {\n    title: \"Web Apps\",\n    href: \"#\",\n    icon: <AppWindow strokeWidth={2} />,\n    description: \"Ship features, not infrastructure\",\n  },\n];\n\nconst users: {\n  title: string;\n  icon: ReactElement;\n  href: string;\n  description: string;\n}[] = [\n  {\n    title: \"Platform Engineers\",\n    href: \"#\",\n    icon: <Code strokeWidth={2} />,\n    description: \"Automate away repetition\",\n  },\n  {\n    title: \"Design Engineers\",\n    href: \"#\",\n    icon: <Layers strokeWidth={2} />,\n    description: \"Deploy for every idea\",\n  },\n];\n\nexport function Header() {\n  const [scrolled, setScrolled] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 0);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  return (\n    <div\n      className={`flex sticky px-4 z-50 top-0 w-full bg-background items-center h-16 justify-between transition-border duration-300 ${\n        scrolled ? \"border-b\" : \"border-b-0\"\n      }`}\n    >\n      {\" \"}\n      <div className=\"flex items-center justify-between w-full  mx-auto max-w-7xl\">\n        <div className=\"flex h-14 justify-center\">\n          <Vercel size={100} className=\"h-14\" type=\"wordmark\" />\n          <NavigationMenu className=\"ml-8 hidden lg:flex\" viewport={true}>\n            <NavigationMenuList>\n              <NavigationMenuItem>\n                <NavigationMenuTrigger\n                  className={cn(\n                    navigationMenuTriggerStyle(),\n                    \"rounded-full h-7.5 font-normal text-muted-foreground\"\n                  )}\n                >\n                  Products\n                </NavigationMenuTrigger>\n                <NavigationMenuContent className=\"bg-background\">\n                  <ul className=\"grid w-[400px] pt-2 grid-cols-3 md:w-[800px]\">\n                    <div>\n                      <span className=\"p-4 text-muted-foreground\">\n                        AI Cloud\n                      </span>\n                      {cloud.map((component) => (\n                        <ListItem\n                          key={component.title}\n                          title={component.title}\n                          icon={component.icon}\n                          href={component.href}\n                        >\n                          {component.description}\n                        </ListItem>\n                      ))}\n                    </div>\n                    <div>\n                      <span className=\"p-4 text-muted-foreground\">\n                        Core Platform\n                      </span>\n                      {core.map((component) => (\n                        <ListItem\n                          key={component.title}\n                          title={component.title}\n                          icon={component.icon}\n                          href={component.href}\n                        >\n                          {component.description}\n                        </ListItem>\n                      ))}\n                    </div>\n                    <div>\n                      <span className=\"p-4 text-muted-foreground\">\n                        Security\n                      </span>\n                      {security.map((component) => (\n                        <ListItem\n                          key={component.title}\n                          title={component.title}\n                          icon={component.icon}\n                          href={component.href}\n                        >\n                          {component.description}\n                        </ListItem>\n                      ))}\n                    </div>\n                  </ul>\n                </NavigationMenuContent>\n              </NavigationMenuItem>\n              <NavigationMenuItem>\n                <NavigationMenuTrigger\n                  className={cn(\n                    navigationMenuTriggerStyle(),\n                    \"rounded-full h-7.5 font-normal text-muted-foreground\"\n                  )}\n                >\n                  Resources\n                </NavigationMenuTrigger>\n                <NavigationMenuContent className=\"bg-background\">\n                  <ul className=\"grid w-[400px] pt-2 grid-cols-3 md:w-[800px]\">\n                    <div>\n                      <span className=\"p-4 text-muted-foreground\">Company</span>\n                      {company.map((component) => (\n                        <ListItem\n                          key={component.title}\n                          title={component.title}\n                          icon={component.icon}\n                          href={component.href}\n                        >\n                          {component.description}\n                        </ListItem>\n                      ))}\n                    </div>\n                    <div>\n                      <span className=\"p-4 text-muted-foreground\">\n                        Open Source\n                      </span>\n                      {open.map((component) => (\n                        <ListItem\n                          key={component.title}\n                          title={component.title}\n                          icon={component.icon}\n                          href={component.href}\n                        >\n                          {component.description}\n                        </ListItem>\n                      ))}\n                    </div>\n                    <div>\n                      <span className=\"p-4 text-muted-foreground\">Tools</span>\n                      {tools.map((component) => (\n                        <ListItem\n                          key={component.title}\n                          title={component.title}\n                          icon={component.icon}\n                          href={component.href}\n                        >\n                          {component.description}\n                        </ListItem>\n                      ))}\n                    </div>\n                  </ul>\n                </NavigationMenuContent>\n              </NavigationMenuItem>\n              <NavigationMenuItem>\n                <NavigationMenuTrigger\n                  className={cn(\n                    navigationMenuTriggerStyle(),\n                    \"rounded-full h-7.5 font-normal text-muted-foreground\"\n                  )}\n                >\n                  Solutions\n                </NavigationMenuTrigger>\n                <NavigationMenuContent className=\"bg-background\">\n                  <ul className=\"grid w-[400px] pt-2 grid-cols-2 md:w-[550px]\">\n                    <div>\n                      <span className=\"p-4 text-muted-foreground\">\n                        Use Cases\n                      </span>\n                      {cases.map((component) => (\n                        <ListItem\n                          key={component.title}\n                          title={component.title}\n                          icon={component.icon}\n                          href={component.href}\n                        >\n                          {component.description}\n                        </ListItem>\n                      ))}\n                    </div>\n                    <div>\n                      <span className=\"p-4 text-muted-foreground\">Users</span>\n                      {users.map((component) => (\n                        <ListItem\n                          key={component.title}\n                          title={component.title}\n                          icon={component.icon}\n                          href={component.href}\n                        >\n                          {component.description}\n                        </ListItem>\n                      ))}\n                    </div>\n                  </ul>\n                </NavigationMenuContent>\n              </NavigationMenuItem>\n              <NavigationMenuItem>\n                <NavigationMenuLink\n                  asChild\n                  className={cn(\n                    navigationMenuTriggerStyle(),\n                    \"rounded-full h-7.5 font-normal text-muted-foreground\"\n                  )}\n                >\n                  <Link href=\"#\">Enterprise</Link>\n                </NavigationMenuLink>\n              </NavigationMenuItem>\n              <NavigationMenuItem>\n                <NavigationMenuLink\n                  asChild\n                  className={cn(\n                    navigationMenuTriggerStyle(),\n                    \"rounded-full h-7.5 font-normal text-muted-foreground\"\n                  )}\n                >\n                  <Link href=\"#\">Docs</Link>\n                </NavigationMenuLink>\n              </NavigationMenuItem>\n              <NavigationMenuItem>\n                <NavigationMenuLink\n                  asChild\n                  className={cn(\n                    navigationMenuTriggerStyle(),\n                    \"rounded-full h-7.5 font-normal text-muted-foreground\"\n                  )}\n                >\n                  <Link href=\"#\">Pricing</Link>\n                </NavigationMenuLink>\n              </NavigationMenuItem>\n            </NavigationMenuList>\n          </NavigationMenu>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant={\"outline\"} size={\"sm\"}>\n            Contact\n          </Button>\n          <Button variant={\"outline\"} size={\"sm\"}>\n            Dashboard\n          </Button>\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Avatar className=\"border\">\n                <AvatarImage src=\"/ali.jpg\" alt=\"Ali Imam\" />\n                <AvatarFallback>AI</AvatarFallback>\n              </Avatar>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent className=\"w-70 p-3 rounded-xl\" align=\"end\">\n              <div className=\"p-2\">\n                <h1 className=\"font-semibold\">Ali Imam</h1>\n                <p className=\"text-sm text-muted-foreground\">\n                  contact@aliimam.in\n                </p>\n              </div>\n              <DropdownMenuGroup>\n                <DropdownMenuItem className=\"py-3\">Dadhboard</DropdownMenuItem>\n                <DropdownMenuItem className=\"py-3\">\n                  Account Settings\n                </DropdownMenuItem>\n                <DropdownMenuItem className=\"py-3 justify-between\">\n                  Create Taems <CirclePlus strokeWidth={2} />\n                </DropdownMenuItem>\n              </DropdownMenuGroup>\n              <DropdownMenuSeparator className=\"-mx-3\" />\n              <DropdownMenuGroup>\n                <DropdownMenuItem className=\"py-3 justify-between\">\n                  Theme <ThemeSwitcher />\n                </DropdownMenuItem>\n              </DropdownMenuGroup>\n              <DropdownMenuSeparator className=\"-mx-3\" />\n\n              <DropdownMenuItem className=\"py-3 justify-between\">\n                Logout <LogOut strokeWidth={2} />\n              </DropdownMenuItem>\n              <DropdownMenuSeparator className=\"-mx-3\" />\n              <DropdownMenuItem className=\"pt-3\">\n                <Button className=\"w-full\">Upgrade to Pro</Button>\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ListItem({\n  title,\n  icon,\n  children,\n  href,\n  ...props\n}: React.ComponentPropsWithoutRef<\"li\"> & {\n  href: string;\n  icon: ReactElement;\n}) {\n  return (\n    <li {...props}>\n      <NavigationMenuLink asChild className=\"hover:bg-transparent\">\n        <Link href={href}>\n          <div className=\"flex gap-3 items-start rounded-md p-2\">\n            <div className=\"border rounded-sm p-2 icon-container\">{icon}</div>\n            <div className=\"text-container\">\n              <div className=\"text-sm font-medium leading-none\">{title}</div>\n              <p className=\"text-muted-foreground line-clamp-2 pt-1 text-xs leading-snug\">\n                {children}\n              </p>\n            </div>\n          </div>\n        </Link>\n      </NavigationMenuLink>\n\n      <style jsx>{`\n        li:hover .icon-container {\n          background-color: var(--foreground);\n          color: var(--background);\n          transform: scale(1.05);\n          transition: all 0.2s ease;\n        }\n\n        li:hover .text-container .text-sm {\n          color: var(--foreground); /* Change title color on hover */\n          transition: color 0.2s ease;\n        }\n\n        li:hover .text-container p {\n          color: var(--foreground); /* Change description color on hover */\n          transition: color 0.2s ease;\n        }\n      `}</style>\n    </li>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/blocks/header/header-06/components/theme.tsx",
      "content": "\"use client\";\n\nimport { useTheme } from \"next-themes\";\nimport { Monitor, Moon, Sun } from \"@aliimam/icons\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { cn } from \"@/registry/default/lib/utils\";\n\nconst themes = [\n  {\n    key: \"system\",\n    icon: Monitor,\n    label: \"System theme\",\n  },\n  {\n    key: \"light\",\n    icon: Sun,\n    label: \"Light theme\",\n  },\n  {\n    key: \"dark\",\n    icon: Moon,\n    label: \"Dark theme\",\n  },\n];\n\nexport type ThemeSwitcherProps = {\n  value?: \"light\" | \"dark\" | \"system\";\n  onChange?: (theme: \"light\" | \"dark\" | \"system\") => void;\n  defaultValue?: \"light\" | \"dark\" | \"system\";\n  className?: string;\n};\n\nexport const ThemeSwitcher = ({ \n  className,\n}: ThemeSwitcherProps) => {\n  const { theme, setTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n\n  const handleThemeClick = useCallback(\n    (themeKey: \"light\" | \"dark\" | \"system\") => {\n      setTheme(themeKey);\n    },\n    [setTheme]\n  );\n\n  // Prevent hydration mismatch\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        \"relative isolate flex h-7 rounded-full bg-background p-1 ring-1 ring-border\",\n        className\n      )}\n    >\n      {themes.map(({ key, icon: Icon, label }) => {\n        const isActive = theme === key;\n\n        return (\n          <button\n            aria-label={label}\n            className=\"relative h-5 w-6 rounded-full\"\n            key={key}\n            onClick={() => handleThemeClick(key as \"light\" | \"dark\" | \"system\")}\n            type=\"button\"\n          >\n            {isActive && (\n              <div className=\"absolute inset-0 rounded-full bg-secondary\" />\n            )}\n            <Icon\n              className={cn(\n                \"relative z-10 m-auto h-3.5 w-3.5\",\n                isActive ? \"text-foreground\" : \"text-muted-foreground\"\n              )}\n            />\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "iframeHeight": "500px"
  },
  "categories": [
    "header",
    "navbar"
  ]
}