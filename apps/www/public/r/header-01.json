{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "header-01",
  "type": "registry:block",
  "description": "A simple header section.",
  "dependencies": [
    "next-themes",
    "@aliimam/icons"
  ],
  "registryDependencies": [
    "button",
    "navigation-menu",
    "toggle"
  ],
  "files": [
    {
      "path": "registry/default/blocks/header/header-01/page.tsx",
      "content": "import { Header } from \"@/registry/default/blocks/header/header-01/components/header\";\n\nexport default function Header01() {\n  return (\n    <div className=\"flex flex-col min-h-screen w-full overflow-hidden\">\n      <Header /> \n      <main className=\"flex-1\">\n        <section className=\"h-screen flex items-center justify-center\">\n          <h1 className=\"text-4xl font-bold\">Hero</h1>\n        </section> \n\n        <section className=\"h-screen flex items-center justify-center\">\n          <h1 className=\"text-4xl font-bold\">Section</h1>\n        </section>\n      </main>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/header-01.tsx"
    },
    {
      "path": "registry/default/blocks/header/header-01/components/header.tsx",
      "content": "\"use client\"; \nimport { Equal, X } from \"@aliimam/icons\";\nimport React from \"react\";\nimport { cn } from \"@/registry/default/lib/utils\";\nimport { Button } from \"@/registry/default/ui/button\"; \nimport { Menus } from \"@/registry/default/blocks/header/header-01/components/menus\";\nimport { ModeToggle } from \"@/registry/default/blocks/header/header-01/components/theme-switch\";\n\nconst menuItems = [\n  { name: \"About\", href: \"#\" },\n  { name: \"Components\", href: \"#\" },\n  { name: \"Pricing\", href: \"#\" },\n  { name: \"Contact\", href: \"#\" },\n];\n\nconst Header = () => {\n  const [menuState, setMenuState] = React.useState(false);\n  const [isScrolled, setIsScrolled] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 4);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  return (\n    \n      <header>\n        <nav\n          data-state={menuState && \"active\"}\n          className={cn(\n            \"fixed z-50 w-full px-3 md:px-4 transition-colors duration-300\",\n            isScrolled ? \"border-transparent\" : \"border-b\"\n          )}\n        >\n          <div\n            className={cn(\n              \"mx-auto mt-2 transition-all duration-300\",\n              isScrolled &&\n                \"bg-[oklch(0.141 0.005 285.823)]/50 max-w-5xl rounded-2xl border backdrop-blur-xl px-3\"\n            )}\n          >\n            <div className=\"relative flex flex-wrap items-center justify-between gap-3 py-3\">\n              <div className=\"flex w-full justify-between lg:w-auto\">\n                <a\n                  href=\"#\"\n                  aria-label=\"home\"\n                  className=\"flex gap-2 items-center\"\n                >\n                  <img\n                    src=\"/ai-logo-white.png\"\n                    alt=\"Your Image\"\n                    height={50}\n                    width={50}\n                    className=\"h-10 z-10 w-full hidden dark:block object-contain\"\n                  />\n                  <img\n                    src=\"/ai-logo-black.png\"\n                    alt=\"Your Image\"\n                    height={50}\n                    width={50}\n                    className=\"h-10 z-10 w-full dark:hidden block object-contain\"\n                  />\n                </a>\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={() => setMenuState(!menuState)}\n                    aria-label={menuState == true ? \"Close Menu\" : \"Open Menu\"}\n                    className=\"relative z-20 pr-4 block cursor-pointer p-2.5 lg:hidden\"\n                  >\n                    <Equal className=\"in-data-[state=active]:rotate-180 scale-120 in-data-[state=active]:scale-0 in-data-[state=active]:opacity-0 m-auto duration-200\" />\n                    <X className=\"in-data-[state=active]:rotate-0 in-data-[state=active]:scale-120 in-data-[state=active]:opacity-100 absolute inset-0 m-auto size-6 -rotate-180 scale-0 opacity-0 duration-200\" />\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"absolute inset-0 m-auto hidden lg:block size-fit\">\n                <Menus />\n              </div>\n\n              <div className=\"in-data-[state=active]:block border backdrop-blur-2xl lg:in-data-[state=active]:flex hidden w-full flex-wrap items-center justify-end space-y-8 rounded-sm p-3 shadow-3xl shadow-zinc-300/20 md:flex-nowrap lg:m-0 lg:flex lg:w-fit lg:gap-6 lg:space-y-0 lg:border-transparent lg:bg-transparent lg:p-0 lg:shadow-none dark:shadow-none dark:lg:bg-transparent\">\n                <div className=\"lg:hidden block p-3\">\n                  <ul className=\"space-y-6 text-base\">\n                    {menuItems.map((item, index) => (\n                      <li key={index}>\n                        <a\n                          href={item.href}\n                          className=\"text-muted-foreground hover:text-primary text-sm block duration-150\"\n                        >\n                          <span>{item.name}</span>\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"flex w-full flex-col space-y-3 sm:flex-row sm:gap-2 sm:space-y-0\">\n                  <ModeToggle />\n                  <Button\n                    variant={\"secondary\"}\n                    asChild\n                    className={cn(isScrolled && \"lg:hidden\")}\n                  >\n                    <a\n                      target=\"_blank\"\n                      href=\"https://cal.com/aliimam-in/30min\"\n                    >\n                      <span>Book an Intro call</span>\n                    </a>\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </header>\n    \n  );\n};\n\nexport { Header };\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/blocks/header/header-01/components/theme-switch.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Moon, Sun } from \"@aliimam/icons\";\nimport { useTheme } from \"next-themes\";\nimport { useEffect, useState } from \"react\";\nimport { Toggle } from \"@/registry/default/ui/toggle\";\n\nexport function ModeToggle() {\n  const { theme, setTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) return null;\n\n  return (\n    <div className=\"flex flex-col justify-center\">\n      <div>\n        <Toggle\n          className=\"group bg-secondary dark:bg-secondary data-[state=on]:hover:bg-muted cursor-pointer size-9 data-[state=on]:bg-transparent\"\n          pressed={theme === \"dark\"}\n          onPressedChange={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n          aria-label={`Switch to ${theme === \"dark\" ? \"light\" : \"dark\"} mode`}\n        >\n          <Moon\n            size={16}\n            className=\"shrink-0 scale-0 opacity-0 transition-all group-data-[state=on]:scale-100 group-data-[state=on]:opacity-100\"\n            aria-hidden=\"true\"\n          />\n          <Sun\n            size={16}\n            className=\"absolute shrink-0 scale-100 opacity-100 transition-all group-data-[state=on]:scale-0 group-data-[state=on]:opacity-0\"\n            aria-hidden=\"true\"\n          />\n        </Toggle>\n      </div>\n    </div>\n  );\n}\n ",
      "type": "registry:component"
    },
    {
      "path": "registry/default/blocks/header/header-01/components/menus.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\"; \n\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n  navigationMenuTriggerStyle,\n} from \"@/registry/default/ui/navigation-menu\";\nimport { cn } from \"@/src/lib/utils\";\n\nconst components: { title: string; href: string; description: string }[] = [\n  {\n    title: \"Docs\",\n    href: \"#\",\n    description:\n      \"Explore our comprehensive UI design and components docs, empowering integration.\",\n  },  \n  {\n    title: \"Colors\",\n    href: \"#\",\n    description:\n      \"Vibrant, accessible color palette for intuitive, seamless UI design and components.\",\n  },  \n  {\n    title: \"Blocks\",\n    href: \"#\",\n    description: \"Modular, flexible UI blocks for intuitive, seamless design and robust functionality.\",\n  },\n  {\n    title: \"UI\",\n    href: \"#\",\n    description:\n      \"Stunning UI component showcase for inspiring, seamless design exploration.\",\n  },\n  {\n    title: \"Blogs\",\n    href: \"#\",\n    description:\n      \"Engaging UI design blogs with insights for seamless component integration.\",\n  },\n  {\n    title: \"Contact\",\n    href: \"#\",\n    description:\n      \"Get in touch for UI design inquiries, support, and seamless collaboration opportunities.\",\n  },\n];\n\nexport function Menus() {\n  return (\n    <NavigationMenu viewport={true}>\n      <NavigationMenuList>\n        <NavigationMenuItem>\n          <NavigationMenuLink\n            asChild\n            className={cn(navigationMenuTriggerStyle(), \"bg-transparent text-xs\")}\n          >\n            <a href=\"#\">About</a>\n          </NavigationMenuLink>\n        </NavigationMenuItem>\n        <NavigationMenuItem>\n          <NavigationMenuLink\n            asChild\n            className={cn(navigationMenuTriggerStyle(), \"bg-transparent text-xs\")}\n          >\n            <a href=\"#\">Templates</a>\n          </NavigationMenuLink>\n        </NavigationMenuItem>\n        <NavigationMenuItem>\n          <NavigationMenuLink\n            asChild\n            className={cn(navigationMenuTriggerStyle(), \"bg-transparent text-xs\")}\n          >\n            <a href=\"#\">Blocks</a>\n          </NavigationMenuLink>\n        </NavigationMenuItem>\n        <NavigationMenuItem>\n          <NavigationMenuTrigger className=\"bg-transparent text-xs\">\n            Resources\n          </NavigationMenuTrigger>\n          <NavigationMenuContent className=\"p-2\">\n            <ul className=\"grid gap-3 md:grid-cols-3 max-w-xl lg:w-3xl\">\n              {components.map((component) => (\n                <ListItem\n                  key={component.title}\n                  title={component.title}\n                  href={component.href}\n                >\n                  {component.description}\n                </ListItem>\n              ))}\n            </ul>\n          </NavigationMenuContent>\n        </NavigationMenuItem>\n        <NavigationMenuItem>\n          <NavigationMenuLink\n            asChild\n            className={cn(navigationMenuTriggerStyle(), \"bg-transparent text-xs\")}\n          >\n            <a href=\"#\">Icons</a>\n          </NavigationMenuLink>\n        </NavigationMenuItem>\n        <NavigationMenuItem>\n          <NavigationMenuLink\n            asChild\n            className={cn(navigationMenuTriggerStyle(), \"bg-transparent text-xs\")}\n          >\n            <a href=\"#\">Components</a>\n          </NavigationMenuLink>\n        </NavigationMenuItem>\n      </NavigationMenuList>\n    </NavigationMenu>\n  );\n}\n\nfunction ListItem({\n  title,\n  children,\n  href,\n  ...props\n}: React.ComponentPropsWithoutRef<\"li\"> & { href: string }) {\n  return (\n    <li {...props}>\n      <NavigationMenuLink asChild>\n        <a className=\"p-3\" href={href}>\n          <div className=\"text-sm leading-none font-medium\">{title}</div>\n          <p className=\"text-muted-foreground line-clamp-2 text-xs leading-snug\">\n            {children}\n          </p>\n        </a>\n      </NavigationMenuLink>\n    </li>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "iframeHeight": "500px"
  },
  "categories": [
    "header",
    "navbar"
  ]
}