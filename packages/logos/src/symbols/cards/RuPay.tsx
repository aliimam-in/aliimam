import * as React from "react";
import type { IconProps, IconMetadata, IconComponent } from "../../types";

export const RuPay: IconComponent = React.forwardRef<SVGSVGElement, IconProps>(
  function RuPay(
    {
      color = "currentColor",
      fill,
      size = 24,
      strokeWidth,
      strokeLinecap,
      strokeLinejoin,
      strokeDasharray,
      opacity,
      className,
      ...props
    },
    forwardedRef,
  ) {
    return (
      <svg
        width={size}
        height={size}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
        strokeWidth={strokeWidth}
        strokeLinecap={strokeLinecap}
        strokeLinejoin={strokeLinejoin}
        strokeDasharray={strokeDasharray}
        opacity={opacity}
        {...props}
        ref={forwardedRef}
      >
        <path
          d="M20.25 5.25H3.75C2.50736 5.25 1.5 6.25736 1.5 7.5V16.5C1.5 17.7426 2.50736 18.75 3.75 18.75H20.25C21.4926 18.75 22.5 17.7426 22.5 16.5V7.5C22.5 6.25736 21.4926 5.25 20.25 5.25Z"
          fill="#e6e6e6"
        />
        <path
          d="M19.7072 10.3184L20.6875 12.2648L18.6268 14.2121L19.7072 10.3184Z"
          fill="#008c44"
        />
        <path
          d="M19.0285 10.3184L20.0073 12.2648L17.948 14.2121L19.0285 10.3184Z"
          fill="#f47920"
        />
        <path
          d="M3.313 13.504 4.29 9.983H5.852C6.341 9.983 6.667 10.06 6.833 10.22 6.998 10.378 7.029 10.636 6.93 10.998 6.87 11.212 6.779 11.391 6.653 11.533 6.529 11.675 6.365 11.787 6.163 11.869 6.334 11.91 6.443 11.992 6.492 12.115 6.541 12.238 6.535 12.417 6.476 12.651L6.357 13.143 6.357 13.156C6.323 13.294 6.333 13.368 6.389 13.374L6.353 13.504H5.295C5.299 13.421 5.306 13.347 5.313 13.285 5.32 13.221 5.33 13.172 5.339 13.138L5.438 12.786C5.487 12.604 5.49 12.476 5.444 12.402 5.398 12.327 5.294 12.29 5.129 12.29H4.685L4.346 13.504 3.313 13.504ZM4.905 11.497H5.381C5.548 11.497 5.671 11.473 5.747 11.424 5.823 11.374 5.879 11.29 5.912 11.169 5.947 11.045 5.938 10.959 5.889 10.91 5.84 10.861 5.722 10.837 5.537 10.837H5.088L4.905 11.497ZM9.831 10.906 9.111 13.504H8.235L8.343 13.123C8.189 13.275 8.031 13.39 7.872 13.463 7.714 13.538 7.548 13.575 7.373 13.575 7.228 13.575 7.104 13.548 7.003 13.496 6.902 13.444 6.827 13.365 6.776 13.261 6.731 13.17 6.711 13.057 6.719 12.923 6.727 12.79 6.774 12.567 6.86 12.254L7.234 10.906H8.192L7.819 12.248C7.765 12.444 7.752 12.582 7.778 12.657 7.806 12.733 7.88 12.772 7.999 12.772 8.12 12.772 8.222 12.729 8.305 12.639 8.39 12.551 8.456 12.419 8.505 12.244L8.875 10.906 9.831 10.906ZM9.484 13.504 10.46 9.983H11.803C12.099 9.983 12.329 10 12.492 10.039 12.656 10.076 12.784 10.135 12.879 10.22 12.998 10.33 13.071 10.466 13.101 10.63 13.129 10.793 13.113 10.984 13.051 11.208 12.941 11.601 12.75 11.903 12.476 12.114 12.202 12.322 11.863 12.426 11.459 12.426H10.83L10.531 13.504H9.484ZM11.068 11.566H11.406C11.624 11.566 11.778 11.539 11.867 11.487 11.954 11.434 12.016 11.341 12.054 11.207 12.092 11.072 12.082 10.978 12.025 10.925 11.97 10.873 11.83 10.846 11.606 10.846H11.269L11.068 11.566ZM14.177 13.504 14.187 13.257C14.033 13.373 13.876 13.46 13.719 13.515 13.562 13.571 13.396 13.599 13.217 13.599 12.946 13.599 12.757 13.525 12.647 13.382 12.539 13.239 12.521 13.034 12.595 12.772 12.666 12.514 12.791 12.324 12.972 12.202 13.152 12.079 13.453 11.991 13.875 11.935 13.928 11.926 14 11.919 14.09 11.908 14.402 11.872 14.577 11.789 14.615 11.654 14.634 11.579 14.622 11.525 14.576 11.491 14.532 11.456 14.449 11.439 14.329 11.439 14.229 11.439 14.149 11.459 14.083 11.502 14.018 11.546 13.969 11.609 13.935 11.698H13.002C13.086 11.406 13.258 11.185 13.517 11.037 13.775 10.887 14.114 10.814 14.535 10.814 14.733 10.814 14.91 10.833 15.067 10.873 15.224 10.911 15.339 10.966 15.413 11.033 15.505 11.116 15.559 11.21 15.574 11.315 15.592 11.419 15.572 11.568 15.518 11.763L15.116 13.212C15.103 13.259 15.101 13.302 15.108 13.34 15.116 13.377 15.132 13.408 15.161 13.431L15.139 13.504 14.177 13.504ZM14.41 12.344C14.308 12.385 14.176 12.424 14.012 12.467 13.754 12.536 13.609 12.628 13.577 12.743 13.556 12.816 13.564 12.873 13.6 12.916 13.636 12.957 13.697 12.977 13.784 12.977 13.943 12.977 14.071 12.937 14.166 12.858 14.261 12.777 14.332 12.651 14.382 12.477 14.391 12.44 14.399 12.413 14.404 12.393L14.41 12.344ZM15.146 14.528 15.359 13.759H15.633C15.724 13.759 15.796 13.741 15.847 13.708 15.899 13.674 15.934 13.616 15.955 13.538 15.965 13.504 15.971 13.468 15.975 13.427 15.978 13.384 15.978 13.338 15.975 13.285L15.829 10.906H16.799L16.784 12.482 17.63 10.906H18.531L17.035 13.492C16.865 13.781 16.742 13.979 16.664 14.088 16.586 14.195 16.513 14.278 16.442 14.334 16.349 14.412 16.246 14.467 16.135 14.499 16.023 14.532 15.854 14.549 15.626 14.549 15.56 14.549 15.484 14.547 15.403 14.543 15.321 14.54 15.235 14.535 15.146 14.528Z"
          fill="#1b3281"
        />
      </svg>
    );
  },
);

RuPay.displayName = "RuPay";

RuPay.metadata = {
  name: "RuPay",
  category: "symbols/cards",
  tags: ["rupay", "icon"],
  description: "RuPay icon from symbols/cards category",
  type: ["stroke", "icon"],
} as IconMetadata;

export default RuPay;
