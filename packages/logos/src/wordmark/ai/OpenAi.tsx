import * as React from "react";
import type { IconProps, IconMetadata, IconComponent } from "../../types";

interface OpenAiProps extends IconProps {
  type?: "wordmark" | "icon";
}

export const OpenAi: IconComponent<OpenAiProps> = React.forwardRef<
  SVGSVGElement,
  OpenAiProps
>(function OpenAi(
  {
    color = "currentColor",
    fill,
    size = 24,
    strokeWidth,
    strokeLinecap,
    strokeLinejoin,
    strokeDasharray,
    opacity,
    className,
    type = "icon",
    ...props
  },
  forwardedRef,
) {
  if (type === "wordmark") {
    return (
      <svg
        width={size}
        height={size}
        viewBox="0 0 87 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
        strokeWidth={strokeWidth}
        strokeLinecap={strokeLinecap}
        strokeLinejoin={strokeLinejoin}
        strokeDasharray={strokeDasharray}
        opacity={opacity}
        {...props}
        ref={forwardedRef}
      >
        <path
          d="M27.3615 11.5384C27.3615 15.4624 29.8781 18.1985 33.3654 18.1985C36.8527 18.1985 39.3693 15.4624 39.3693 11.5384C39.3693 7.61427 36.8527 4.87822 33.3654 4.87822C29.8781 4.87822 27.3615 7.61427 27.3615 11.5384ZM37.0684 11.5384C37.0684 14.3464 35.5405 16.1645 33.3654 16.1645C31.1903 16.1645 29.6624 14.3464 29.6624 11.5384C29.6624 8.7303 31.1903 6.91226 33.3654 6.91226C35.5405 6.91226 37.0684 8.7303 37.0684 11.5384ZM45.8489 18.1985C48.4913 18.1985 50.0013 15.9665 50.0013 13.2844C50.0013 10.6023 48.4913 8.37029 45.8489 8.37029C44.6265 8.37029 43.7277 8.8563 43.1345 9.55832V8.55029H40.9774V21.2406H43.1345V17.0105C43.7277 17.7125 44.6265 18.1985 45.8489 18.1985ZM43.0806 13.0144C43.0806 11.2324 44.0872 10.2603 45.4174 10.2603C46.9813 10.2603 47.8262 11.4844 47.8262 13.2844C47.8262 15.0844 46.9813 16.3085 45.4174 16.3085C44.0872 16.3085 43.0806 15.3184 43.0806 13.5724V13.0144ZM55.8389 18.1985C57.7264 18.1985 59.2184 17.2085 59.8835 15.5524L58.032 14.8504C57.7444 15.8224 56.8995 16.3625 55.8389 16.3625C54.4548 16.3625 53.4841 15.3724 53.3223 13.7524H59.9374V13.0324C59.9374 10.4403 58.4814 8.37029 55.749 8.37029C53.0167 8.37029 51.2551 10.5123 51.2551 13.2844C51.2551 16.2005 53.1425 18.1985 55.8389 18.1985ZM55.7311 10.1883C57.0972 10.1883 57.7444 11.0883 57.7623 12.1324H53.4302C53.7537 10.8543 54.6166 10.1883 55.7311 10.1883ZM61.556 18.0005H63.7131V12.4564C63.7131 11.1063 64.7017 10.3863 65.6724 10.3863C66.8588 10.3863 67.3262 11.2324 67.3262 12.4024V18.0005H69.4833V11.7724C69.4833 9.73832 68.2969 8.37029 66.3196 8.37029C65.0972 8.37029 64.2523 8.9283 63.7131 9.55832V8.55029H61.556V18.0005ZM75.8011 5.07622L70.9116 18.0005H73.1946L74.2911 15.0484H79.8636L80.9781 18.0005H83.297L78.4076 5.07622H75.8011ZM77.0594 7.63227L79.1086 13.0324H75.0461L77.0594 7.63227ZM87 5.11372H84.6991V18.038H87V5.11372ZM22.0901 9.82307C22.3588 9.0151 22.452 8.15897 22.3635 7.312C22.275 6.46502 22.0069 5.64675 21.577 4.91197C20.2693 2.63192 17.6403 1.45889 15.0727 2.0109C14.5083 1.37401 13.8145 0.865167 13.0378 0.518395C12.2611 0.171623 11.4194 -0.00507782 10.5691 0.000111054C7.94458 -0.00588907 5.61596 1.68615 4.80855 4.1867C3.97514 4.35756 3.18779 4.70469 2.49918 5.20487C1.81058 5.70506 1.2366 6.34675 0.815668 7.08701C-0.50181 9.36106 -0.201464 12.2276 1.55867 14.1777C1.28996 14.9856 1.19672 15.8418 1.2852 16.6887C1.37369 17.5357 1.64185 18.354 2.07173 19.0888C3.37947 21.3688 6.00843 22.5418 8.57598 21.9898C9.14035 22.6268 9.83413 23.1357 10.6109 23.4823C11.3876 23.829 12.2293 24.0054 13.0797 23.9999C15.7056 24.0066 18.035 22.3131 18.8424 19.8103C19.6758 19.6394 20.4632 19.2923 21.1518 18.7921C21.8404 18.2919 22.4144 17.6502 22.8353 16.91C24.1513 14.6359 23.8502 11.7716 22.0908 9.82157L22.0901 9.82307ZM13.0812 22.4316C12.0304 22.4333 11.0125 22.0647 10.2058 21.3906C10.2425 21.3711 10.3062 21.3358 10.3473 21.3103L15.1199 18.5503C15.2398 18.482 15.3394 18.383 15.4083 18.2635C15.4773 18.1439 15.5132 18.0081 15.5124 17.87V11.1326L17.5294 12.2989C17.5512 12.3094 17.5654 12.3304 17.5684 12.3544V17.9337C17.5654 20.4148 15.5588 22.4263 13.0812 22.4316ZM3.43115 18.3043C2.90472 17.3939 2.71513 16.327 2.89562 15.2907C2.93082 15.3117 2.99299 15.3499 3.03718 15.3754L7.80976 18.1355C8.05169 18.2773 8.35128 18.2773 8.59396 18.1355L14.4204 14.7664V17.099C14.4219 17.123 14.4106 17.1462 14.3919 17.1612L9.56765 19.9505C7.41879 21.1896 4.67448 20.453 3.4319 18.3043H3.43115ZM2.17509 7.87228C2.69938 6.96026 3.52702 6.26274 4.5127 5.90049C4.5127 5.94174 4.51045 6.01449 4.51045 6.06549V11.5864C4.50895 11.8669 4.65875 12.1271 4.90217 12.2659L10.7286 15.6342L8.71155 16.8005C8.69133 16.814 8.66586 16.8162 8.64339 16.8065L3.81838 14.0149C1.67401 12.7714 0.938503 10.0241 2.17434 7.87303L2.17509 7.87228ZM18.7473 11.7341L12.9209 8.36504L14.9379 7.19951C14.9581 7.18601 14.9836 7.18376 15.0061 7.19352L19.8311 9.98283C21.9792 11.2256 22.7155 13.9774 21.4744 16.1285C20.9495 17.0389 20.1227 17.7363 19.1375 18.0995V12.4136C19.1398 12.1331 18.9907 11.8736 18.7481 11.7341H18.7473ZM20.7546 8.70855C20.7194 8.6868 20.6572 8.6493 20.613 8.6238L15.8405 5.86374C15.7215 5.79411 15.5862 5.75742 15.4484 5.75742C15.3106 5.75742 15.1752 5.79411 15.0563 5.86374L9.22985 9.23281V6.90026C9.22835 6.87626 9.23959 6.85301 9.25831 6.83801L14.0826 4.05095C16.2314 2.80967 18.9787 3.54844 20.2176 5.70098C20.7411 6.61019 20.9306 7.67416 20.7531 8.70855H20.7546ZM8.13333 12.8659L6.11554 11.6996C6.10492 11.6944 6.09579 11.6865 6.08899 11.6768C6.08218 11.6671 6.07792 11.6559 6.07659 11.6441V6.06474C6.07809 3.58069 8.09063 1.56764 10.5713 1.56914C11.6206 1.56914 12.6363 1.93815 13.4429 2.61017C13.4062 2.62967 13.3433 2.66492 13.3014 2.69042L8.52879 5.45048C8.40894 5.51856 8.30939 5.61742 8.2404 5.73686C8.17141 5.85631 8.13549 5.99201 8.13632 6.12999L8.13333 12.8644V12.8659ZM9.2291 10.5003L11.8244 8.99955L14.4196 10.4996V13.5004L11.8244 15.0004L9.2291 13.5004V10.5003Z"
          fill="currentColor"
        />
      </svg>
    );
  }

  if (type === "icon") {
    return (
      <svg
        width={size}
        height={size}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
        strokeWidth={strokeWidth}
        strokeLinecap={strokeLinecap}
        strokeLinejoin={strokeLinejoin}
        strokeDasharray={strokeDasharray}
        opacity={opacity}
        {...props}
        ref={forwardedRef}
      >
        <path
          d="M22.4235 9.82112C22.6956 9.013 22.7897 8.15692 22.6995 7.31007C22.6094 6.46321 22.3371 5.64508 21.9008 4.91033C20.5737 2.63162 17.9063 1.45948 15.3012 2.01027C14.58 1.21884 13.6602 0.628557 12.6345 0.298698C11.6087 -0.0311621 10.5131 -0.0889845 9.4575 0.131038C8.40192 0.35106 7.42362 0.84118 6.62084 1.55218C5.81806 2.26317 5.21907 3.17001 4.88402 4.18162C4.03818 4.35271 3.2391 4.69991 2.54019 5.20003C1.84128 5.70015 1.25864 6.34166 0.831207 7.08168C-0.510356 9.35679 -0.205762 12.2265 1.5843 14.1783C1.31125 14.9861 1.21621 15.842 1.30553 16.6889C1.39486 17.5358 1.6665 18.3541 2.10227 19.089C3.43108 21.3686 6.10015 22.5406 8.70659 21.9891C9.27965 22.6256 9.98378 23.1343 10.772 23.481C11.5602 23.8278 12.4143 24.0047 13.2773 23.9999C15.9474 24.0022 18.313 22.3019 19.1286 19.794C19.9743 19.6226 20.7732 19.2753 21.4721 18.7752C22.1709 18.2751 22.7536 17.6337 23.1813 16.8939C24.5067 14.6229 24.2008 11.7687 22.4235 9.82112ZM13.2773 22.4292C12.2115 22.4309 11.1791 22.0624 10.3612 21.3884L10.5051 21.3079L15.3492 18.5498C15.4697 18.4801 15.5698 18.3806 15.6396 18.2611C15.7094 18.1417 15.7465 18.0064 15.7473 17.8685V11.1316L17.7953 12.3001C17.8157 12.3104 17.83 12.3297 17.8336 12.3522V17.9347C17.8284 20.4148 15.7915 22.424 13.2773 22.4292ZM3.48358 18.3038C2.94909 17.3934 2.75718 16.3263 2.94161 15.2901L3.08543 15.3753L7.93437 18.1335C8.05434 18.2029 8.19093 18.2395 8.33004 18.2395C8.46915 18.2395 8.60574 18.2029 8.72571 18.1335L14.6489 14.765V17.0974C14.6484 17.1094 14.6451 17.1212 14.6393 17.1319C14.6335 17.1425 14.6253 17.1518 14.6154 17.1589L9.70896 19.9502C7.52862 21.1892 4.74302 20.4524 3.48358 18.3038ZM2.20774 7.89548C2.74595 6.97924 3.59545 6.28039 4.60587 5.92267V11.5998C4.60404 11.737 4.63957 11.8721 4.70875 11.9911C4.77792 12.1101 4.87821 12.2086 4.99915 12.2764L10.8936 15.6307L8.84562 16.7992C8.83454 16.805 8.8222 16.808 8.80966 16.808C8.79713 16.808 8.78479 16.805 8.77371 16.7992L3.87686 14.0128C1.70083 12.7686 0.954582 10.023 2.20774 7.8719V7.89548ZM19.0327 11.7513L13.1189 8.36387L15.1622 7.20005C15.1733 7.19425 15.1857 7.19121 15.1982 7.19121C15.2108 7.19121 15.2231 7.19425 15.2342 7.20005L20.1311 9.99137C20.8798 10.4175 21.4902 11.045 21.8909 11.8005C22.2917 12.556 22.4663 13.4084 22.3944 14.2581C22.3225 15.1078 22.007 15.9198 21.4848 16.5993C20.9626 17.2788 20.2552 17.7978 19.4452 18.0956V12.4183C19.4409 12.2814 19.4007 12.1479 19.3284 12.031C19.2561 11.914 19.1542 11.8177 19.0327 11.7513ZM21.071 8.72823L20.9271 8.64297L16.0878 5.86118C15.9671 5.79132 15.8297 5.75448 15.6897 5.75448C15.5498 5.75448 15.4124 5.79132 15.2917 5.86118L9.37315 9.22973V6.89738C9.37189 6.88552 9.3739 6.87355 9.37896 6.86272C9.38403 6.8519 9.39197 6.84263 9.40193 6.83588L14.2988 4.04928C15.0493 3.62281 15.9074 3.41593 16.7727 3.45285C17.638 3.48978 18.4748 3.76897 19.1852 4.25778C19.8955 4.74659 20.4501 5.42481 20.784 6.21312C21.118 7.00143 21.2175 7.86723 21.0709 8.70927V8.72823H21.071ZM8.25574 12.863L6.20777 11.6992C6.19754 11.6931 6.18879 11.6849 6.18214 11.6751C6.1755 11.6652 6.17113 11.6541 6.16934 11.6424V6.07415C6.17047 5.21993 6.41811 4.38369 6.8833 3.66318C7.34849 2.94268 8.012 2.36769 8.79626 2.00545C9.58053 1.64321 10.4531 1.50868 11.312 1.6176C12.171 1.72652 12.9807 2.07439 13.6466 2.62052L13.5027 2.70097L8.65859 5.45909C8.53804 5.52884 8.43795 5.62833 8.36817 5.74777C8.29838 5.86721 8.26128 6.00251 8.26052 6.14036L8.25574 12.8631V12.863ZM9.36837 10.4975L12.0063 8.9978L14.6489 10.4976V13.497L12.0159 14.9968L9.37324 13.497L9.36837 10.4975Z"
          fill="currentColor"
        />
      </svg>
    );
  }

  console.error(`OpenAi doesn't support ${type}`);
  return null;
});

OpenAi.displayName = "OpenAi";

OpenAi.metadata = {
  name: "OpenAi",
  category: "wordmark/ai",
  tags: ["openai", "icon"],
  description: "OpenAi icon from wordmark/ai category",
  type: ["stroke", "icon"],
} as IconMetadata;

export default OpenAi;
