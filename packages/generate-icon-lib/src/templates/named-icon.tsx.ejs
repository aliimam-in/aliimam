import * as React from 'react';
import type { IconProps, IconMetadata } from '../types';

<% if (icon.metadata && icon.metadata.variants && icon.metadata.variants.length > 1) { %>
// Icon with multiple variants
interface <%- iconToPropsName(icon) %> extends IconProps {
  variant?: <%- icon.metadata.variants.map(v => `"${v}"`).join(' | ') %>;
}

export const <%- iconToComponentName(icon) %> = React.forwardRef<SVGSVGElement, <%- iconToPropsName(icon) %>>(
  function <%- iconToComponentName(icon) %>({
    color = 'currentColor',
    fill,
    strokeWidth,
    strokeLinecap,
    strokeLinejoin,
    strokeDasharray,
    opacity,
    className,
    variant = '<%- getDefaultVariant() %>',
    ...props
  }, forwardedRef) {
    return <%- iconToSVGSourceAsJSX(icon, icon.sizes[0], icon.types[0]) %>
  }
);

<% } else { %>
// Icon with single variant
export const <%- iconToComponentName(icon) %> = React.forwardRef<SVGSVGElement, IconProps>(
  function <%- iconToComponentName(icon) %>({
    color = 'currentColor',
    fill,
    strokeWidth,
    strokeLinecap,
    strokeLinejoin,
    strokeDasharray,
    opacity,
    className,
    variant = '<%- getDefaultVariant() %>',
    ...props
  }, forwardedRef) {
    return <%- iconToSVGSourceAsJSX(icon, icon.sizes[0], icon.types[0]) %>
  }
);

<% } %>

// Icon metadata
<%- iconToComponentName(icon) %>.metadata = <%- JSON.stringify(icon.metadata, null, 2) %> as IconMetadata;

export default <%- iconToComponentName(icon) %>;