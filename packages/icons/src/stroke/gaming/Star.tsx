import * as React from "react";
import type { IconProps, IconMetadata, IconComponent } from "../../types";

interface StarProps extends IconProps {
  type?: "stroke";
}

export const Star: IconComponent<StarProps> = React.forwardRef<
  SVGSVGElement,
  StarProps
>(function Star(
  {
    color = "currentColor",
    fill,
    size = 24,
    strokeWidth,
    strokeLinecap,
    strokeLinejoin,
    strokeDasharray,
    opacity,
    className,
    type = "stroke",
    ...props
  },
  forwardedRef,
) {
  if (type === "stroke") {
    return (
      <svg
        width={size}
        height={size}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
        strokeWidth={strokeWidth}
        strokeLinecap={strokeLinecap}
        strokeLinejoin={strokeLinejoin}
        strokeDasharray={strokeDasharray}
        opacity={opacity}
        {...props}
        ref={forwardedRef}
      >
        <path
          d="M11.525 2.29499C11.5688 2.20645 11.6365 2.13192 11.7204 2.07981C11.8044 2.0277 11.9012 2.00009 12 2.00009C12.0988 2.00009 12.1956 2.0277 12.2795 2.07981C12.3634 2.13192 12.4311 2.20645 12.475 2.29499L14.785 6.97399C14.9371 7.28195 15.1618 7.54839 15.4396 7.75044C15.7174 7.95248 16.0401 8.0841 16.38 8.13399L21.546 8.88999C21.6439 8.90417 21.7358 8.94546 21.8115 9.00918C21.8871 9.07291 21.9434 9.15653 21.974 9.25059C22.0046 9.34465 22.0082 9.44539 21.9846 9.54142C21.9609 9.63745 21.9108 9.72494 21.84 9.79398L18.104 13.432C17.8576 13.6721 17.6732 13.9685 17.5668 14.2956C17.4604 14.6228 17.435 14.9709 17.493 15.31L18.375 20.45C18.3922 20.5478 18.3817 20.6485 18.3445 20.7407C18.3073 20.8328 18.2449 20.9126 18.1645 20.971C18.0841 21.0294 17.9889 21.064 17.8898 21.0709C17.7907 21.0778 17.6917 21.0567 17.604 21.01L12.986 18.582C12.6817 18.4222 12.3431 18.3387 11.9995 18.3387C11.6558 18.3387 11.3173 18.4222 11.013 18.582L6.39597 21.01C6.3083 21.0564 6.20937 21.0773 6.11042 21.0702C6.01147 21.0632 5.91649 21.0285 5.83626 20.9702C5.75604 20.9119 5.6938 20.8322 5.65662 20.7402C5.61945 20.6482 5.60883 20.5477 5.62597 20.45L6.50697 15.311C6.56516 14.9717 6.53995 14.6234 6.43351 14.296C6.32706 13.9687 6.14258 13.6721 5.89597 13.432L2.15997 9.79499C2.08856 9.72602 2.03796 9.63838 2.01393 9.54206C1.9899 9.44574 1.99341 9.3446 2.02405 9.25018C2.05469 9.15575 2.11124 9.07183 2.18725 9.00797C2.26326 8.94411 2.35567 8.90288 2.45397 8.88899L7.61897 8.13399C7.95923 8.08448 8.28236 7.95304 8.56055 7.75097C8.83875 7.5489 9.06367 7.28226 9.21597 6.97399L11.525 2.29499Z"
          stroke={color}
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  }

  if (type === "stroke") {
    return (
      <svg
        width={size}
        height={size}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
        strokeWidth={strokeWidth}
        strokeLinecap={strokeLinecap}
        strokeLinejoin={strokeLinejoin}
        strokeDasharray={strokeDasharray}
        opacity={opacity}
        {...props}
        ref={forwardedRef}
      >
        <path
          d="M11.525 2.29502C11.5688 2.20648 11.6365 2.13195 11.7205 2.07984C11.8044 2.02773 11.9012 2.00012 12 2.00012C12.0988 2.00012 12.1956 2.02773 12.2795 2.07984C12.3635 2.13195 12.4312 2.20648 12.475 2.29502L14.785 6.97402C14.9372 7.28198 15.1618 7.54842 15.4396 7.75047C15.7174 7.95251 16.0401 8.08413 16.38 8.13402L21.546 8.89002C21.6439 8.9042 21.7358 8.94549 21.8115 9.00921C21.8871 9.07294 21.9434 9.15656 21.974 9.25062C22.0046 9.34468 22.0083 9.44542 21.9846 9.54145C21.9609 9.63748 21.9108 9.72497 21.84 9.79402L18.104 13.432C17.8576 13.6721 17.6733 13.9685 17.5668 14.2956C17.4604 14.6228 17.4351 14.9709 17.493 15.31L18.375 20.45C18.3923 20.5479 18.3817 20.6486 18.3445 20.7407C18.3073 20.8328 18.2449 20.9126 18.1645 20.971C18.0842 21.0294 17.989 21.064 17.8899 21.0709C17.7908 21.0778 17.6917 21.0567 17.604 21.01L12.986 18.582C12.6817 18.4222 12.3432 18.3388 11.9995 18.3388C11.6558 18.3388 11.3173 18.4222 11.013 18.582L6.396 21.01C6.30833 21.0564 6.2094 21.0773 6.11045 21.0703C6.0115 21.0632 5.91652 21.0286 5.83629 20.9702C5.75607 20.9119 5.69383 20.8322 5.65666 20.7402C5.61948 20.6483 5.60886 20.5477 5.626 20.45L6.507 15.311C6.5652 14.9717 6.53998 14.6234 6.43354 14.2961C6.32709 13.9687 6.14261 13.6722 5.896 13.432L2.16 9.79502C2.08859 9.72605 2.03799 9.63841 2.01396 9.54209C1.98993 9.44577 1.99344 9.34463 2.02408 9.25021C2.05472 9.15578 2.11127 9.07186 2.18728 9.008C2.26329 8.94414 2.3557 8.90291 2.454 8.88902L7.619 8.13402C7.95926 8.08451 8.28239 7.95307 8.56058 7.751C8.83878 7.54893 9.0637 7.28229 9.216 6.97402L11.525 2.29502Z"
          stroke={color}
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  }

  if (type === "stroke") {
    return (
      <svg
        width={size}
        height={size}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
        strokeWidth={strokeWidth}
        strokeLinecap={strokeLinecap}
        strokeLinejoin={strokeLinejoin}
        strokeDasharray={strokeDasharray}
        opacity={opacity}
        {...props}
        ref={forwardedRef}
      >
        <path
          d="M11.525 2.29502C11.5688 2.20648 11.6365 2.13195 11.7205 2.07984C11.8044 2.02773 11.9012 2.00012 12 2.00012C12.0988 2.00012 12.1956 2.02773 12.2795 2.07984C12.3635 2.13195 12.4312 2.20648 12.475 2.29502L14.785 6.97402C14.9372 7.28198 15.1618 7.54842 15.4396 7.75047C15.7174 7.95251 16.0401 8.08413 16.38 8.13402L21.546 8.89002C21.6439 8.9042 21.7358 8.94549 21.8115 9.00921C21.8871 9.07294 21.9434 9.15656 21.974 9.25062C22.0046 9.34468 22.0083 9.44542 21.9846 9.54145C21.9609 9.63748 21.9108 9.72497 21.84 9.79402L18.104 13.432C17.8576 13.6721 17.6733 13.9685 17.5668 14.2956C17.4604 14.6228 17.4351 14.9709 17.493 15.31L18.375 20.45C18.3923 20.5479 18.3817 20.6486 18.3445 20.7407C18.3073 20.8328 18.2449 20.9126 18.1645 20.971C18.0842 21.0294 17.989 21.064 17.8899 21.0709C17.7908 21.0778 17.6917 21.0567 17.604 21.01L12.986 18.582C12.6817 18.4222 12.3432 18.3388 11.9995 18.3388C11.6558 18.3388 11.3173 18.4222 11.013 18.582L6.396 21.01C6.30833 21.0564 6.2094 21.0773 6.11045 21.0703C6.0115 21.0632 5.91652 21.0286 5.83629 20.9702C5.75607 20.9119 5.69383 20.8322 5.65666 20.7402C5.61948 20.6483 5.60886 20.5477 5.626 20.45L6.507 15.311C6.5652 14.9717 6.53998 14.6234 6.43354 14.2961C6.32709 13.9687 6.14261 13.6722 5.896 13.432L2.16 9.79502C2.08859 9.72605 2.03799 9.63841 2.01396 9.54209C1.98993 9.44577 1.99344 9.34463 2.02408 9.25021C2.05472 9.15578 2.11127 9.07186 2.18728 9.008C2.26329 8.94414 2.3557 8.90291 2.454 8.88902L7.619 8.13402C7.95926 8.08451 8.28239 7.95307 8.56058 7.751C8.83878 7.54893 9.0637 7.28229 9.216 6.97402L11.525 2.29502Z"
          stroke={color}
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  }

  console.error(`Star doesn't support ${type}`);
  return null;
});

Star.displayName = "Star";

Star.metadata = {
  name: "Star",
  category: "stroke/gaming",
  tags: ["star", "icon"],
  description: "Star icon from stroke/gaming category",
  type: ["stroke", "icon"],
} as IconMetadata;

export default Star;
